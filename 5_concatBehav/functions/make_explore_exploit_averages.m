
function [apple_sizes, apple_sizes_desc] = make_explore_exploit_averages(ID_mat)

    data_fold = ('../../data/');
    dir_data = (strcat(data_fold,'sanity_check/'));
    
    apple_sizes = {};

    for ID_n=1:size(ID_mat,2)
        
        part = ID_mat(ID_n);
        
        %%%%%%%%%%% ABD

        load(strcat(dir_data, 'user_',num2str(part),'/logs/logdesc.mat'))
        load(strcat(dir_data, 'user_',num2str(part),'/logs/logABDlong_all.mat'))
        tmp=logABDlong_all;

        scores_per_trial_desc = {'Block','BlockTrial','GameIDs','Trial','AppleSize'};
        scores_per_trial = [tmp(tmp(:,5)>5,1:2) tmp(tmp(:,5)>5,4) tmp(tmp(:,5)>5,5) tmp(tmp(:,5)>5,10)];


        apple_sizes_ABD=[scores_per_trial(scores_per_trial(:,4)==6,1:3),... % block, block trial, game ID
            scores_per_trial(scores_per_trial(:,4)==6,5),... %1st apple size
            scores_per_trial(scores_per_trial(:,4)==7,5),... %2nd apple size
            scores_per_trial(scores_per_trial(:,4)==8,5),... %3rd apple size
            scores_per_trial(scores_per_trial(:,4)==9,5),... %4th apple size
            scores_per_trial(scores_per_trial(:,4)==10,5),... %5th apple size
            scores_per_trial(scores_per_trial(:,4)==11,5)];   %6th apple size

        %%%%%%%%%%% AB

        load(strcat(dir_data, 'user_',num2str(part),'/logs/logABlong_all.mat'))
        tmp=logABlong_all;

        scores_per_trial_desc = {'Block','BlockTrial','GameIDs','Trial','AppleSize'};
        scores_per_trial = [tmp(tmp(:,5)>4,1:2) tmp(tmp(:,5)>4,4) tmp(tmp(:,5)>4,5) tmp(tmp(:,5)>4,10)];


        apple_sizes_AB=[scores_per_trial(scores_per_trial(:,4)==5,1:3),... % block, block trial, game ID
            scores_per_trial(scores_per_trial(:,4)==5,5),... %1st apple size
            scores_per_trial(scores_per_trial(:,4)==6,5),... %2nd apple size
            scores_per_trial(scores_per_trial(:,4)==7,5),... %3rd apple size
            scores_per_trial(scores_per_trial(:,4)==8,5),... %4th apple size
            scores_per_trial(scores_per_trial(:,4)==9,5),... %5th apple size
            scores_per_trial(scores_per_trial(:,4)==10,5)];   %6th apple size

        %%%%%%%%%%% AD

        load(strcat(dir_data, 'user_',num2str(part),'/logs/logADlong_all.mat'))
        tmp=logADlong_all;

        scores_per_trial_desc = {'Block','BlockTrial','GameIDs','Trial','AppleSize'};
        scores_per_trial = [tmp(tmp(:,5)>4,1:2) tmp(tmp(:,5)>4,4) tmp(tmp(:,5)>4,5) tmp(tmp(:,5)>4,10)];


        apple_sizes_AD=[scores_per_trial(scores_per_trial(:,4)==5,1:3),... % block, block trial, game ID
            scores_per_trial(scores_per_trial(:,4)==5,5),... %1st apple size
            scores_per_trial(scores_per_trial(:,4)==6,5),... %2nd apple size
            scores_per_trial(scores_per_trial(:,4)==7,5),... %3rd apple size
            scores_per_trial(scores_per_trial(:,4)==8,5),... %4th apple size
            scores_per_trial(scores_per_trial(:,4)==9,5),... %5th apple size
            scores_per_trial(scores_per_trial(:,4)==10,5)];   %6th apple size

        %%%%%%%%%%% BD

        load(strcat(dir_data, 'user_',num2str(part),'/logs/logBDlong.mat'))
        tmp=logBDlong;

        scores_per_trial_desc = {'Block','BlockTrial','GameIDs','Trial','AppleSize'};
        scores_per_trial = [tmp(tmp(:,5)>2,1:2) tmp(tmp(:,5)>2,4) tmp(tmp(:,5)>2,5) tmp(tmp(:,5)>2,7)];


        apple_sizes_BD=[scores_per_trial(scores_per_trial(:,4)==3,1:3),... % block, block trial, game ID
            scores_per_trial(scores_per_trial(:,4)==3,5),... %1st apple size
            scores_per_trial(scores_per_trial(:,4)==4,5),... %2nd apple size
            scores_per_trial(scores_per_trial(:,4)==5,5),... %3rd apple size
            scores_per_trial(scores_per_trial(:,4)==6,5),... %4th apple size
            scores_per_trial(scores_per_trial(:,4)==7,5),... %5th apple size
            scores_per_trial(scores_per_trial(:,4)==8,5)];   %6th apple size


        %%%%%%%%%%% All

        apple_sizes_desc = {'Block','BlockTrial','GameIDs','Apple1Size','Apple2Size','Apple3Size','Apple4Size', 'Apple5Size', 'Apple6Size'};
        apple_sizes{ID_n} = [apple_sizes_BD; apple_sizes_ABD; apple_sizes_AD; apple_sizes_AB];

    end

end