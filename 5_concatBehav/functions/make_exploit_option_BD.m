
function [chosenOptionFreqBD,chosenOptionFreqBD_desc, exploitMatAllPart_LH, exploitMatAllPart_LH_desc, FreqisExploited, FreqisExplored]=make_exploit_option_BD(ID_mat)

    data_fold = ('../../data/');
    dir_data = (strcat(data_fold,'sanity_check/'));
    
    exploitMatAllPart_LH = {};
    FreqisExploited = {};
    FreqisExplored = {};
    chosenOptionFreq = nan(size(ID_mat,2),6);
    
    for ID_n=1:size(ID_mat,2)
    
    part = ID_mat(ID_n);

        % start loop
        tmp = load(strcat(dir_data, 'user_',num2str(part),'/mat_BD.mat'));

        valueB=tmp.mat_BD(:,5);
        valueD=tmp.mat_BD(:,6);
        
        chosen=tmp.mat_BD(:,7);
        hor=tmp.mat_BD(:,3);
        gameID=tmp.mat_BD(:,4);
        sizeChosenApple=tmp.mat_BD(:,8);
        block=tmp.mat_BD(:,1);
        blocktrial=tmp.mat_BD(:,2);

        values = [nan(100,1),valueB,nan(100,1),valueD]; 
        [maxValues,IndmaxValues] = max(values');
            for i=1:size(IndmaxValues,2)
                if IndmaxValues(1,i)== 4
                    disp('D is exploit!')
                end
            end
        exploitTree=IndmaxValues';
        exploitTreeMat(ID_n,:) = exploitTree;
        exploitHorMat(ID_n,:) = hor;
        exploitTreeValue=maxValues';

        exploitMat=[hor,exploitTree,chosen,gameID,sizeChosenApple,block,blocktrial,exploitTreeValue];
        exploitMat_SH=exploitMat(exploitMat(:,1)==6,2:8);
        exploitMat_LH=exploitMat(exploitMat(:,1)==11,2:8);

        % SH
        exploitChosenSH = exploitMat_SH(:,1)==exploitMat_SH(:,2);
        novelChosenSH = exploitMat_SH(:,2)==3;
        badChosenSH = exploitMat_SH(:,2)==4;

        % LH
        exploitChosenLH = exploitMat_LH(:,1)==exploitMat_LH(:,2);
        novelChosenLH = exploitMat_LH(:,2)==3;
        badChosenLH = exploitMat_LH(:,2)==4;

        exploitMatAllPart_LH_desc = {'exploitTree','chosen','gameID','sizeChosenApple','block','blocktrial', 'exploitTreevalue'};
        exploitMatAllPart_LH{ID_n}=exploitMat_LH;
        
        FreqisExploited{ID_n}.TreeA_LH=size(find(exploitMat_LH(find(exploitMat_LH(:,1)==exploitMat_LH(:,2)),1)==1),1);
        FreqisExploited{ID_n}.TreeA_SH=size(find(exploitMat_SH(find(exploitMat_SH(:,1)==exploitMat_SH(:,2)),1)==1),1);
        FreqisExploited{ID_n}.TreeB_LH=size(find(exploitMat_LH(find(exploitMat_LH(:,1)==exploitMat_LH(:,2)),1)==2),1);
        FreqisExploited{ID_n}.TreeB_SH=size(find(exploitMat_SH(find(exploitMat_SH(:,1)==exploitMat_SH(:,2)),1)==2),1);
        
        FreqisExplored{ID_n}.TreeB_LH=size(find(exploitMat_LH(find(exploitMat_LH(:,1)==1),2)==2),1); % exploit is A, B is explored
        FreqisExplored{ID_n}.TreeB_SH=size(find(exploitMat_SH(find(exploitMat_SH(:,1)==1),2)==2),1);
        FreqisExplored{ID_n}.TreeA_LH=size(find(exploitMat_LH(find(exploitMat_LH(:,1)==2),2)==1),1); % exploit is B, A is explored
        FreqisExplored{ID_n}.TreeA_SH=size(find(exploitMat_SH(find(exploitMat_SH(:,1)==2),2)==1),1);

        % exploitSH, exploreSH, novelSH, exploitLH, exploreLH, novelLH
        chosenOptionFreq(ID_n,:)=sum([exploitChosenSH,badChosenSH,novelChosenSH,exploitChosenLH,badChosenLH,novelChosenLH]); 
    end

    chosenOptionFreqBD_desc={'exploitSH', 'badSH','novelSH', 'exploitLH', 'badLH', 'novelLH'};
    chosenOptionFreqBD = chosenOptionFreq; %/(96/8);

end
